/*
해설

해당 문제는 세로는 고정이 되어져있기 때문에 가로의 길이만큼 들어갈 수 있는 직사각형의 갯수를 구하는 문제입니다.


n=0인 경우는 타일을 배치할 수는 없지만 경우의 수로 따졌을 때는 타일이 0개 배치된 한 가지 방법이 있다.

n=1인 경우는 타일을 세로로 배치하는 한 가지 방법밖에 없다.

n=2는 가로와 세로 배치가 모두 가능한데, 세로배치 같은 경우는 n=1의 경우에 새로운 타일을 세로로 배치하는 한 가지가 있고 

가로배치는 가로길이 2칸을 차지해야 하기 때문에 n=0의 경우에 가로배치하는 한 가지 경우가 있어서 n=2는 총 두 가지 경우의 수가 있다.

n의 경우의 수는 곧 n-1이었던 모든 경우의 수와 n-2의 모든 경우의 수를 더한 값이다.

하지만 문제를 풀기에는 시간 초과가 걸리기 때문에 메모이제이션을 구현한다.

풀이
1. (return) 만약 0이나 1이 올 경우 경우의 수가 1이 있기 때문에 1을 리턴해준다.
2. (for) for문을 통해 n의 경우의 수까지 메모이제이션으로 접근한다.
    n-2와 n-1의 경우의 수를 모두 더하고 % 1000000007
3. (return) 마지막 dp를 리턴한다.

*/

function solution(n) {
    const dp = new Array();
    dp[0] = 1;
    dp[1] = 1;
    if (n <= 1) return dp[0];

    for (let i = 2; i <= n; i++) {
        dp[i] = (dp[i - 2] + dp[i - 1]) % 1000000007;
    }

    return dp[n];
}

console.log(solution(4))