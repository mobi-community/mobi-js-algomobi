/*
설계 1.
1. 문자열을 배열로 만든다.
2. 배열을 set에 넣는다.
3. 순서에서 문제가 생긴다. ? 

오류 값
"{{4,2,3},{3},{2,3,4,1},{2,3}}" // 4231

정닶 값
"{{4,2,3},{3},{2,3,4,1},{2,3}}" // 3241

주요사항

문제의 내용 중

집합은 원소의 순서가 바뀌어도 상관없으므로

{{2}, {2, 1}, {2, 1, 3}, {2, 1, 3, 4}}
{{2, 1, 3, 4}, {2}, {2, 1, 3}, {2, 1}}
{{1, 2, 3}, {2, 1}, {1, 2, 4, 3}, {2}}

다음과 같이 표시하였지만 가장 맨 위인 
{{2}, {2, 1}, {2, 1, 3}, {2, 1, 3, 4}} 형태로 set에 들어가야한다.

결론: 배열로 바꿔주자.


설계 2.
1. (JSON.parse()) JSON 형식을 이용하여 객체를 {}를 배열로 바꾼다.
2. (sort) 길이가 짧은 순으로 정렬을 한다.
3. (set) asnwer에 중복되지 않는 값들을 추가한다.
4. (...) 전개 연산자를 이용하여 배열로 만들어서 결과를 나타낸다.
*/

const example = '{{4,2,3},{3},{2,3,4,1},{2,3}}';

function solution(s) {
    s = JSON.parse(s.replace(/{/g, '[').replace(/}/g, ']'));

    s.sort((a,b)=> a.length - b.length)

    const answer = new Set();

    s.forEach((element) => {
        element.forEach((v) => {
            answer.add(v);
        });
    });

    return[...answer]
}

console.log(solution(example));
