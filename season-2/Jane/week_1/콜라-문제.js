/*
@ 풀이 방법 생각하기
a: 기준 병 수, b: 새로 주는 병, n: 처음 빈 병의 개수
E: 빈 병, R: 나머지, N: 새로 받은
(변수명이 헷갈릴 수 있어 n 대신 E로 대체)
[2, 1, 20]
- E: 20 10 05 02 02
- N: 10 05 02 01 01 > 19
- R: 00 00 01 01 00

[3, 1, 20]
- E: 20 06 04
- N: 06 02 01 > 9
- R: 02 02 01

1. (n의 값을 a로 나누었을 때의 몫)*b만큼을 N에 담고 sum에 더한다. 나눈 나머지는 R에 담는다.
2. E에 N을 할당하고 해당 과정을 반복한다.
3. N이 a보다 작아지면 R에 담긴 값을 N에 더한 뒤 1~2의 과정을 반복한다.
4. sum을 반환한다.

구현 시 발견한 문제점
- E를 추가로 생성할 필요가 없다.
- R의 값을 더하는 것을 조건식 처리할 것이 아니라 매번 더하도록 해야 한다.
- 실제로는 코드에 *b를 적용하지 않는 실수를 했다.
*/

function solution(a, b, n) {
  let sum = 0;

  while (n >= a) {
    sum += Math.floor(n / a) * b;
    n = Math.floor(n / a) * b + (n % a);
  }

  return sum;
}
